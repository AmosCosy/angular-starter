@function typography-level(
    $font-size,
    $line-height,
    $font-weight:400) {
    @return (
            font-size:$font-size,
            line-height:$line-height,
            font-weight:$font-weight
    )
}

@function typography-config(
    $font-family:   'Roboto, "simhei", sans-serif',
    $display-4:     typography-level(112px, 112px, 300),
    $display-3:     typography-level(56px, 56px, 400),
    $display-2:     typography-level(45px, 48px, 400),
    $display-1:     typography-level(34px, 40px, 400),
    $headline:      typography-level(24px, 32px, 400),
    $title:         typography-level(20px, 32px, 500),
    $subheading-2:  typography-level(16px, 28px, 400),
    $subheading-1:  typography-level(15px, 24px, 400),
    $body-2:        typography-level(14px, 24px, 500),
    $body-1:        typography-level(14px, 20px, 400),
    $caption:       typography-level(12px, 20px, 400),
    $button:        typography-level(14px, 14px, 500),
    // Line-height must be unit-less fraction of the font-size.
    $input:         typography-level(16px, 1.125, 400)
) {
    // Declare an initial map with all of the levels.
    $config: (
            display-4: $display-4,
            display-3: $display-3,
            display-2: $display-2,
            display-1: $display-1,
            headline: $headline,
            title: $title,
            subheading-2: $subheading-2,
            subheading-1: $subheading-1,
            body-2: $body-2,
            body-1: $body-1,
            caption: $caption,
            button: $button,
            input: $input,
    );
    @each $key, $level in $config {
        @if map-get($level, font-family) == null {
            $new-level: map-merge($level, (font-family: $font-family));
            $config: map-merge($config, ($key: $new-level));
        }
    }
    @return map-merge($config, (font-family: $font-family));
}

@function _mat-get-type-value($config, $level, $name) {
    @return map-get(map-get($config, $level), $name);
}

// Gets the font size for a level inside a typography config.
@function mat-font-size($config, $level) {
    @return _mat-get-type-value($config, $level, font-size);
}

// Gets the line height for a level inside a typography config.
@function mat-line-height($config, $level) {
    @return _mat-get-type-value($config, $level, line-height);
}

// Gets the font weight for a level inside a typography config.
@function mat-font-weight($config, $level) {
    @return _mat-get-type-value($config, $level, font-weight);
}

// Gets the font-family from a typography config and removes the quotes around it.
@function mat-font-family($config, $level: null) {
    $font-family: map-get($config, font-family);

    @if $level != null {
        $font-family: _mat-get-type-value($config, $level, font-family);
    }

    @return unquote($font-family);
}

// Converts a typography level into CSS styles.
@mixin mat-typography-level-to-styles($config, $level) {
    $font-size: mat-font-size($config, $level);
    $font-weight: mat-font-weight($config, $level);
    $line-height: mat-line-height($config, $level);
    $font-family: mat-font-family($config, $level);

    // Use the shorthand `font` to represent a typography level, because it's the shortest. Notes that
    // we need to use interpolation for `font-size/line-height` in order to prevent SASS from dividing
    // the two values.
    font: $font-weight #{$font-size}/#{$line-height} $font-family;
}

@mixin mat-base-typography($config, $selector: '.mat-typography') {
    .mat-h1, .mat-headline, #{$selector} h1 {
        @include mat-typography-level-to-styles($config, headline);
        margin: 0 0 16px;
    }

    .mat-h2, .mat-title, #{$selector} h2 {
        @include mat-typography-level-to-styles($config, title);
        margin: 0 0 16px;
    }

    .mat-h3, .mat-subheading-2, #{$selector} h3 {
        @include mat-typography-level-to-styles($config, subheading-2);
        margin: 0 0 16px;
    }

    .mat-h4, .mat-subheading-1, #{$selector} h4 {
        @include mat-typography-level-to-styles($config, subheading-1);
        margin: 0 0 16px;
    }

    // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for
    // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em
    // and h6 at 0.67em.
    .mat-h5, #{$selector} h5 {
        font-size: mat-font-size($config, body-1) * 0.83;
        font-weight: mat-font-weight($config, body-1);
        font-family: mat-font-family($config, body-1);
        line-height: mat-line-height($config, body-1);
        margin: 0 0 12px;
    }

    .mat-h6, #{$selector} h6 {
        font-size: mat-font-size($config, body-1) * 0.67;
        font-weight: mat-font-weight($config, body-1);
        font-family: mat-font-family($config, body-1);
        line-height: mat-line-height($config, body-1);
        margin: 0 0 12px;
    }

    .mat-body-strong, .mat-body-2 {
        @include mat-typography-level-to-styles($config, body-2);
    }

    .mat-body, .mat-body-1, #{$selector} {
        @include mat-typography-level-to-styles($config, body-1);

        p {
            margin: 0 0 12px;
        }
    }

    .mat-small, .mat-caption {
        @include mat-typography-level-to-styles($config, caption);
    }

    // Note: The spec doesn't mention letter spacing. The value comes from
    // eyeballing it until it looked exactly like the spec examples.
    .mat-display-4, #{$selector} .mat-display-4 {
        @include mat-typography-level-to-styles($config, display-4);
        margin: 0 0 56px;
        letter-spacing: -0.05em;
    }

    .mat-display-3, #{$selector} .mat-display-3 {
        @include mat-typography-level-to-styles($config, display-3);
        margin: 0 0 64px;
        letter-spacing: -0.02em;
    }

    .mat-display-2, #{$selector} .mat-display-2 {
        @include mat-typography-level-to-styles($config, display-2);
        margin: 0 0 64px;
        letter-spacing: -0.005em;
    }

    .mat-display-1, #{$selector} .mat-display-1 {
        @include mat-typography-level-to-styles($config, display-1);
        margin: 0 0 64px;
    }
}

$config: typography-config();
@include mat-base-typography($config);
